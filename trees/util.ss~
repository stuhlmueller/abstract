#!r6rs

(library (util)
         (export all-equal? all-assoc curry all max-take sexp-replace sexp-search)
         (import (except (rnrs) string-hash string-ci-hash)
                 (only (ikarus) set-car! set-cdr!)
                 (_srfi :1)
                 (_srfi :69)
                 (church readable-scheme))

         (define (all-equal? lst)
           (all (map (lambda (itm) (equal? (first lst) itm)) (rest lst))))

         (define (all-assoc alist key)
           (filter (lambda (entry) (equal? (first entry) key)) alist))

         (define (curry fun . const-args)
           (lambda args
             (apply fun (append const-args args))))

         (define (all lst)
           (if (null? lst)
               #t
               (and (first lst)
                    (all (rest lst)))))

         (define (max-take lst n)
           (if (<= (length lst) n)
               lst
               (take lst n)))
         
         (define (sexp-replace old new sexp)
           (if (list? sexp)
               (map (curry sexp-replace old new) sexp)
               (if (equal? sexp old) new sexp)))

         (define (sexp-search pred? func sexp)
           (if (list? sexp)
               (map (curry sexp-search pred? func) sexp)
               (if (pred? sexp) (func sexp) sexp)))
)
